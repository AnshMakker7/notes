Build tools :

A build tool is a program that automates the process of creating executable applications from source code.


What can build tools do?

Modern build tools can perform a wide variety of tasks that software developers do in their day-to-day activities:

1. Downloading and adding dependencies. This is especially convenient when your project depends on a large number of libraries.
2. Compiling source code into bytecode. Build tools will invoke the compiler for all the files in your project.
3. Packaging compiled code. You will have a production-ready application archive like JAR, APK, or some other.
4. Running tests. For example, testing the application archive every time to check if it works correctly. It allows programmers to avoid bugs after modifying the application.
5. Deploying to a production environment.


Build tools for Java-based projects

There are three main build tools for Java-based projects: Apache Ant, Apache Maven, and Gradle.

Apache Ant was released in 2000. It is the oldest of these three build tools. Coders rarely use Ant in new projects but it still occurs in practice. You can use this tool together with Apache Ivy to manage dependencies.

Apache Maven was released in 2004, and now it is one of the most popular choices for Java developers (especially for server-side development). Many projects, both old and new, use Maven as a build tool because of its powerful dependency management possibilities.

Maven follows the Convention Over Configuration concept which means that a developer needs to specify only unconventional aspects of the application, and all standard aspects work by default.

There is also another build tool called sbt (Scala Build Tool). It is primarily used for Scala projects but you can use it for Java or Kotlin as well.